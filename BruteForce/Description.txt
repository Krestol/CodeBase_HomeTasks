Уровень 1
Дано
1. Шифрованный файл chipher_text
2. Исходный код, которым файл был шифрован Encrypt.cpp
3. Пароль которым файл был зашифрован (см. Encrypt.cpp)

Задача
Реалиовать декриптование файла.
Для реализации понадобится библиотека OpenSSL


Уровень 2
Дано
1. Шифрованный файл chipher_text_brute_force
2. Исходный код, которым файл был шифрован Encrypt.cpp
3. максимальная длина пароля 4 символа(может быть меньше) пароль состоит из латинских символов (a... z) и цифр (0... 9)

Задача
Реализовать программу, которая параметром принимает путь к шифрованному файлу и подбирает пароль к нему.
При запуске с ключем --log_passwords, все пароли, которые были проверены записывает в файл.
В консоль выводит прогресс, который обновляется каждые 100ms.
3333 from 10000 passwords checked  [33%]
Time elapsed: 1m 35s
Speed: 35 pass/sec
Подобранный пароль выводит в консоль

Подсказка
Для начала реализуйте для требований максимальная длина пароля 1 символпароль состоит из цифр (0... 9),
потом увеличте сложность и когда будете уверены, что программа работает корректно - приступайте к подбору пароля

Победителем второго уровня станет тот, чья программа покажет наивысшую скорость. Сравним на моем компьютере.

Уровень 3*
Добавить в прграмму, реализованную во втором уровне поддержку конфигурационного файла и словаря.
В конфигурационном файле в виде регулярного выражения перечисленны символы из которых может состоять пароль и максимальная длина пароля. Формат файла на ваше усмотрение.
Словарь содержит список паролей, которые стоит проверить в первую очередь, а так же части паролей.
Например пароль SuperPass123 - словарь может содержать Super; Pass; perPa и т.д.